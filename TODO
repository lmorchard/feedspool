TODO

* Add copyright / license info to all source files
    * Pick a better license than ShareAndEnjoy?

* How to handle "updated" entries with the same ID?  (See: Slate RSS)

* Multi-process/threaded feed polling
    * Make this multi-process polling a plugin itself
    * Process locks feed config to "claim" it for poll?
    * Serial events versus parallel events
        * How would something like miniagg work?  (Wouldn't, currently.)
        * Worker processes communicate to main process
        * Main process calls plugin-dispatch in single-process
            * Serializes parallel events fed in via pipes/sockets

* See about using per-feed overlay config for setting up per-channel logging

* Plugins
    * Spotlight-like BDB / shelve feed data indexer.

    * Make miniagg watch feed entry IDs for freshness.

    * Popular links feed, next generation from the book

    * Plugin which traps XML errors, "repairs" feed with feedparser normalization, respools

    * Plugin to auto-disable / report bad feeds, 404 feeds, other HTTP errors
        * Feed errors logged as a feed?  404, 410, 401, misc exceptions

    * Need examples of plugins using non-python implementation
        * bin dir full of bash scripts?
        * Perl via stdin/out or pipes?

    * Hooks
        * Additional hook types
            * Need plugins which can add commands to CLI
                * Split OPML import/export out into a plugin that does this.


BLUE SKY

* Offer an HTTP proxy which serves up feeds from the spool?
* Perform feed scans on ping-o-matic-style RPC ping, supported by web service
* Perform feed scans on PubSub notification / weblogs.com notice
* Perform feed scans on Jabber IM ping

