TODO

* Upgrade to httplib2 (http://bitworking.org/projects/httplib2/)

* Properly implement subscription removal.  (Delete all associated files?)
    * Write a plugin which archives before deletion.

* Add copyright / license info to all source files
    * Pick a better license than ShareAndEnjoy?

* Multi-process/threaded feed polling
    * Must make plugin hook calls serially in main thread
    * Only multi-thread fetches?  or also spooling?

* See about using per-feed overlay config for setting up per-channel logging

* Plugins

    * Popular links feed, next generation from the book

    * Plugin to auto-disable / report bad feeds, 404 feeds, other HTTP errors
        * Feed errors logged as a feed?  404, 410, 401, misc exceptions

    * Spotlight-like BDB / shelve feed data indexer.
        * BDB would be better for non-python

    * Pre-scan feed scraper using libxslt_web?
        * http://www.mnot.net/python/libxslt_web.py

    * miniagg
        * Figure out why entries' content not showing up in miniagg (but summary is)
        * Don't show disclosure triangle in miniagg for entries with no content to reveal
        * Make miniagg watch feed entry IDs for freshness.
            * Clean out "seen" records when entries deleted.
            * Clean out "seen" records over time?

    * Plugin which traps XML errors, "repairs" feed with feedparser normalization, respools

    * Need examples of plugins using non-python implementation
        * bin dir full of bash scripts?
        * Perl via stdin/out or pipes?

    * Hooks
        * Additional hook types?

BLUE SKY

* Offer an HTTP proxy which serves up feeds from the spool?
* Perform feed scans on ping-o-matic-style RPC ping, supported by web service
* Perform feed scans on PubSub notification / weblogs.com notice
* Perform feed scans on Jabber IM ping

